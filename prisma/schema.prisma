generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  salt      String
  roleId    String?  @map("role_id")
  role      Role?    @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdById   String? @map("created_by_id")
  created_by    User?   @relation("UserCreatedBy", fields: [createdById], references: [id])
  created_users User[]  @relation("UserCreatedBy")

  unit                 Unit[]
  unit_created         Unit[]     @relation("UnitCreatedBy")
  visi_misi_created    VisiMisi[] @relation("VisiMisiCreatedBy")
  PerformanceIndicator kpi[]      @relation("PerformanceIndicatorCreatedBy")
  MataAnggaran         ma[]       @relation("MataAnggaranCreatedBy")
  MaOnKpi              MaOnKpi[]  @relation("MaOnKpiCreatedBy")
  Bidang               Bidang[]   @relation("BidangCreatedBy")

  @@map("users")
}

model Bidang {
  id          String   @id @default(cuid())
  name        String
  code        String   @unique
  kpi         kpi[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id")
  created_by  User?    @relation("BidangCreatedBy", fields: [createdById], references: [id])

  @@map("bidang")
}

model Role {
  id          String       @id @default(cuid())
  name        String       @unique
  permissions Permission[]
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  users       User[]

  @@map("roles")
}

model Permission {
  id          String  @id @default(cuid())
  name        String  @unique
  description String?
  roles       Role[]

  @@map("permissions")
}

model CategoryUnit {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  kpi       kpi[]    @relation("PrimaryPic")
  Unit      Unit[]

  @@map("category_unit")
}

model Unit {
  id           String         @id @default(cuid())
  name         String
  categoryId   String?        @map("category_id")
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  createdById  String?        @map("created_by_id")
  isUnit       Boolean        @default(true) @map("is_unit")
  users        User[]
  VisiMisi     VisiMisi[]
  rekening     Rekening[]
  DataUnit     DataUnit[]
  DataSubUnit  DataSubUnit[]
  PaguAnggaran PaguAnggaran[]

  created_by      User?             @relation("UnitCreatedBy", fields: [createdById], references: [id])
  category_unit   CategoryUnit?     @relation(fields: [categoryId], references: [id])
  secondary_kpi   kpi[]             @relation("SecondaryPic")
  Review          Review[]
  MaOnKpi         MaOnKpi[]
  JadwalPencairan JadwalPencairan[]
  Jadwal          Jadwal[]
  JadwalLaporan   JadwalLaporan?

  @@map("units")
}

model DataUnit {
  id          String        @id @default(cuid())
  unitId      String        @map("unit_id")
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  DataSubUnit DataSubUnit[]

  unit Unit @relation(fields: [unitId], references: [id])

  @@map("data_unit")
}

model DataSubUnit {
  id         String   @id @default(cuid())
  unitId     String   @map("unit_id")
  dataUnitId String   @map("data_unit_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  unit     Unit     @relation(fields: [unitId], references: [id])
  dataUnit DataUnit @relation(fields: [dataUnitId], references: [id])

  @@map("data_sub_unit")
}

model VisiMisi {
  id         String  @id @default(cuid())
  unitId     String? @map("unit_id")
  tahun      String  @unique
  visi       String
  misi       String
  tujuan     String
  keterangan String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdById String? @map("created_by_id")
  created_by  User?   @relation("VisiMisiCreatedBy", fields: [createdById], references: [id])

  unit Unit? @relation(fields: [unitId], references: [id], onDelete: Cascade)

  @@map("visi_misi")
}

model kpi {
  id               String    @id @default(cuid())
  bidangId         String    @map("bidang_id")
  tahun            String
  kpiCode          String    @unique @map("kpi_code")
  name             String
  leadingSector    String?   @map("leading_sector")
  supportingSector String?   @map("supporting_sector")
  sifat            String
  standard         String?
  baseline         String?
  target           String?
  active           Boolean   @default(true)
  primary_pic_id   String    @map("primary_pic_id")
  secondary_pic_id String?   @map("secondary_pic_id")
  MaOnKpi          MaOnKpi[]
  ma               ma[]
  Laporan          Laporan[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdById   String?      @map("created_by_id")
  created_by    User?        @relation("PerformanceIndicatorCreatedBy", fields: [createdById], references: [id])
  primary_pic   CategoryUnit @relation("PrimaryPic", fields: [primary_pic_id], references: [id])
  secondary_pic Unit?        @relation("SecondaryPic", fields: [secondary_pic_id], references: [id])
  bidang        Bidang?      @relation(fields: [bidangId], references: [id], onDelete: Cascade)

  @@map("indikator_kinerja")
}

model ma {
  id          String    @id @default(cuid())
  maCode      String    @map("ma_code")
  name        String
  indicatorId String    @map("indicator_id")
  MaOnKpi     MaOnKpi[]
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  createdById String?   @map("created_by_id")
  created_by  User?     @relation("MataAnggaranCreatedBy", fields: [createdById], references: [id])
  indicator   kpi       @relation(fields: [indicatorId], references: [id])

  @@map("mata_anggaran")
}

model MaOnKpi {
  id              String      @id @default(cuid())
  kpiId           String      @map("kpi_id")
  maId            String      @map("ma_id")
  unitId          String      @map("unit_id")
  sPPId           String?     @map("spp_id")
  uraian          String
  output          String
  statusBiroKeu   Boolean?    @default(false) @map("status_biro_keu")
  anggaran        Int?        @default(0)
  telahDiterima   Int?        @default(0) @map("telah_diterima")
  anggaranDiminta Int?        @default(0) @map("anggaran_diminta")
  startDate       DateTime    @map("start_date")
  endDate         DateTime    @map("end_date")
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime    @updatedAt @map("updated_at")
  createdById     String?     @map("created_by_id")
  created_by      User?       @relation("MaOnKpiCreatedBy", fields: [createdById], references: [id])
  Pembelian       Pembelian[]

  KPI                kpi            @relation(fields: [kpiId], references: [id], onDelete: Cascade)
  MA                 ma             @relation(fields: [maId], references: [id], onDelete: Cascade)
  Unit               Unit           @relation(fields: [unitId], references: [id], onDelete: Cascade)
  ReviewProgram      ReviewProgram?
  SPP                SPP?           @relation(fields: [sPPId], references: [id])
  ProgresSPJ         ProgresSPJ?
  dokumenPersiapan   File[]         @relation("DokumenPersiapan")
  dokumenPelaksanaan File[]         @relation("DokumenPelaksanaan")
  dokumenLaporan     File[]         @relation("DokumenLaporan")
  dokumenPengalihan  File?          @relation("DokumenPengalihan")
  SPJ                SPJ?

  @@map("_maonkpi")
}

model Rekening {
  id        String      @id @default(cuid())
  noRek     String      @map("no_rek")
  name      String
  jenisId   String      @map("jenis_id")
  units     Unit[]
  Pembelian Pembelian[]
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")

  jenisRekening JenisRekening @relation(fields: [jenisId], references: [id])

  @@map("rekening")
}

model JenisRekening {
  id        String     @id @default(cuid())
  code      String     @unique
  name      String
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  Rekening  Rekening[]

  @@map("jenis_rekening")
}

model Pembelian {
  id          String   @id @default(cuid())
  rekeningId  String   @map("rekening_id")
  prokerId    String   @map("proker_id")
  paguId      String   @map("pagu_id")
  uraian      String
  satuan      String
  nilaiSatuan Int      @map("nilai_satuan")
  kuantitas   String
  jumlah      Int
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  rekening        Rekening     @relation(fields: [rekeningId], references: [id])
  ma_to_indicator MaOnKpi      @relation(fields: [prokerId], references: [id])
  pagu            PaguAnggaran @relation(fields: [paguId], references: [id])

  @@map("pembelian")
}

model Jadwal {
  id        String    @id @default(cuid())
  unitId    String    @map("unit_id")
  tahun     String
  name      String?
  startDate DateTime?
  endDate   DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  unit Unit @relation(fields: [unitId], references: [id])

  @@unique([unitId, tahun])
  @@map("jadwal")
}

model PaguAnggaran {
  id       String @id @default(cuid())
  tahun    String
  pagu     Int
  terpakai Int?   @default(0)
  unitId   String @map("unit_id")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  unit      Unit        @relation(fields: [unitId], references: [id])
  Pembelian Pembelian[]

  @@unique([tahun, unitId])
  @@map("pagu_anggaran")
}

model Review {
  id             String   @id @default(cuid())
  tahun          String
  unitId         String   @map("unit_id")
  reviewUmum     String?  @map("review_umum")
  tanggapanAkhir String?  @map("tanggapan_akhir")
  reviewUmum2    String?  @map("review_umum2")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  unit Unit @relation(fields: [unitId], references: [id])

  @@map("review")
}

model ReviewProgram {
  id          String   @id @default(cuid())
  prokerId    String   @unique @map("proker_id")
  temuan      String?
  saran       String?
  tanggapan   String?
  reviewAkhir String?  @map("review_akhir")
  rekomendasi String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  proker MaOnKpi @relation(fields: [prokerId], references: [id])

  @@map("review_program")
}

model File {
  id           String   @id @default(cuid())
  filename     String
  originalName String
  path         String
  mimetype     String
  size         Int
  extension    String
  description  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Remove the direct progresSPJId field
  // Instead, add two optional relation fields
  persiapanId   String? @map("persiapan_id")
  pelaksanaanId String? @map("pelaksanaan_id")
  laporanId     String? @map("laporan_id")
  pengalihanId  String? @unique @map("pengalihan_id")

  // Define the two different relations
  dokumenPersiapan    MaOnKpi? @relation("DokumenPersiapan", fields: [persiapanId], references: [id], onDelete: Cascade)
  dokumenPelaksanaan  MaOnKpi? @relation("DokumenPelaksanaan", fields: [pelaksanaanId], references: [id], onDelete: Cascade)
  dokumenLaporanAkhir MaOnKpi? @relation("DokumenLaporan", fields: [laporanId], references: [id], onDelete: Cascade)
  dokumenPengalihan   MaOnKpi? @relation("DokumenPengalihan", fields: [pengalihanId], references: [id], onDelete: Cascade)

  @@index([filename])
  @@index([createdAt])
}

model SPP {
  id            String   @id @default(cuid())
  tahun         String
  periodeSPMUId String   @map("periode_spmu_id")
  noSpp         String   @map("no_spp")
  otorisasi     Boolean  @default(false)
  status        Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  MaOnKpi MaOnKpi[]

  periode PeriodeSPMU @relation(fields: [periodeSPMUId], references: [id])
  SPMU    SPMU?

  @@map("spp")
}

model SPMU {
  id            String    @id @default(cuid())
  tahun         String
  periodeSPMUId String    @map("periode_spmu_id")
  sppId         String    @unique @map("spp_id")
  noSpmu        String    @map("no_spmu")
  status        Boolean   @default(false)
  tanggal       DateTime?
  biroApproval  Boolean   @default(false) @map("biro_approval")
  wr2Approval   Boolean   @default(false) @map("wr2_approval")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  periode PeriodeSPMU @relation(fields: [periodeSPMUId], references: [id])
  spp     SPP         @relation(fields: [sppId], references: [id])

  @@map("spmu")
}

model PeriodeSPMU {
  id                 String    @id @default(cuid())
  jadwalPencairanId  String    @map("jadwal_pencairan_id")
  periode            String
  startDatePengajuan DateTime? @map("start_date_pengajuan")
  endDatePengajuan   DateTime? @map("end_date_pengajuan")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  JadwalPencairan JadwalPencairan @relation(fields: [jadwalPencairanId], references: [id], onDelete: Cascade)
  SPP             SPP[]
  SPMU            SPMU[]

  @@map("periode_spmu")
}

model JadwalPencairan {
  id            String @id @default(cuid())
  tahun         String
  unitId        String @map("unit_id")
  batasKegiatan Int?   @map("batas_kegiatan")
  tunggakanSPJ  Int?   @map("tunggakan_spj")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  unit        Unit          @relation(fields: [unitId], references: [id])
  PeriodeSPMU PeriodeSPMU[]

  @@map("jadwal_pencairan")
}

model ProgresSPJ {
  id       String @id @default(cuid())
  prokerId String @unique @map("proker_id")

  statusKegiatan          String?  @map("status_kegiatan")
  persenKegiatan          Int?     @map("persen_kegiatan")
  uraianKegiatan          String?  @map("uraian_kegiatan")
  realisasiOutputKegiatan String?  @map("realisasi_output_kegiatan")
  statusDiperbaiki        Boolean? @default(true) @map("status_diperbaiki")

  statusPenilaianBPM String? @map("status_penilaian_bpm")
  persenPenilaianBPM Int?    @map("persen_penilaian_bpm")
  uraianPenilaianBPM String? @map("uraian_penilaian_bpm")
  realisasiOutputBPM String? @map("realisasi_output_bpm")
  statusApprovalBPM  String? @map("status_aproval_bpm")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  proker MaOnKpi @relation(fields: [prokerId], references: [id])

  @@map("progres_spj")
}

model SPJ {
  id       String @id @default(cuid())
  prokerId String @unique @map("proker_id")

  noSPJ      String? @map("no_spj")
  nominalSPJ Int?    @map("nominal_spj")

  statusPersetujuanBiro String?   @map("status_persetujuan_biro")
  keteranganBiro        String?   @map("keterangan_biro")
  tanggalApprovalBiro   DateTime? @map("tanggal_approval_biro")

  statusPersetujuanBPM String?   @map("status_persetujuan_bpm")
  keteranganBPM        String?   @map("keterangan_bpm")
  tanggalApprovalBPM   DateTime? @map("tanggal_approval_bpm")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  proker MaOnKpi @relation(fields: [prokerId], references: [id])

  @@map("spj")
}

model Laporan {
  id              String  @id @default(cuid())
  indikatorId     String  @map("indikator_id")
  capaian         Int?    @default(0)
  capaian_auditor Int?    @default(0)
  kendala         String? @db.Text
  perbaikan       String? @db.Text
  rtl             String? @db.Text
  pic             String? @db.Text
  komentar        String? @db.Text
  rtl_auditor     String? @db.Text
  isApproved      Boolean @default(false) @map("is_approved")
  indicator       kpi     @relation(fields: [indikatorId], references: [id])

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  FileLaporan FileLaporan[]

  @@map("laporan")
}

model FileLaporan {
  id           String   @id @default(cuid())
  laporanId    String   @map("laporan_id")
  filename     String
  originalName String
  path         String
  mimetype     String
  size         Int
  extension    String
  description  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  laporan      Laporan  @relation(fields: [laporanId], references: [id])

  @@index([filename])
  @@index([createdAt])
  @@map("file_laporan")
}

model JadwalLaporan {
  id        String    @id @default(cuid())
  unitId    String    @unique @map("unit_id")
  name      String?
  startDate DateTime?
  endDate   DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  unit Unit @relation(fields: [unitId], references: [id])

  @@map("jadwal_laporan")
}
